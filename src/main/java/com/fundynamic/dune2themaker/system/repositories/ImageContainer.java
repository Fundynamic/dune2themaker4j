package com.fundynamic.dune2themaker.system.repositories;

import java.util.HashMap;
import java.util.Map;

import org.newdawn.slick.Color;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.SpriteSheet;


// becomes obselete soon:
// - move the spritesheet compatability to the repository interface
public class ImageContainer {

	private Color colorKey = new Color(255, 0, 255);
	private static ImageContainer instance = null;
	private Map<String, Image> images;
		
	public ImageContainer() {
		images = new HashMap<String, Image>();
	}
	
	public static ImageContainer getInstance() {
		if (instance == null) {
			instance = new ImageContainer();
		}
		return instance;
	}
	
	/**
	 * Add image to cache.
	 * 
	 * @param location
	 */
	public void addImage(String location, boolean transparant) {
		try {
			Image image;
			if (transparant) {
				image = new Image(location, colorKey);
			} else {
				image = new Image(location);
			}
			images.put(generateKey(location), image);
		} catch (SlickException e) {
			System.err.println(e);
		}
	}
	
	public void addSpriteSheet(String key, SpriteSheet sheet) {
		images.put(key, sheet);
	}
	
	public SpriteSheet getSpriteSheet(String key) {
		return (SpriteSheet)images.get(key);
	}
	
	/**
	 * Generate key for image based on location.
	 * 
	 * @param location
	 * @return
	 */
	public String generateKey(String location) {
		String key = "IMAGE_" + location;
		return key;
	}
	
	/**
	 * Return image by key (generated by generateKey())
	 * 
	 * @param key
	 * @return
	 */
	public Image getImageByKey(String key) {		
		return images.get(key).copy();
	}
	
	/**
	 * Return the image from the cache.
	 * 
	 * @param location
	 * @return
	 */
	public Image getImage(String location) {
		return getImageByKey(generateKey(location));
	}
	
}
